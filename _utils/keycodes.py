key_box = {
    1 : "B7", 2 : "A4", 3 : "A10", 4 : "C3", 5 : "C9", 6 : "D4", 7 : "D11", 
    8 : "E2", 9 : "E6", 10 : "E12", 11 : "P1", 12 : "P4", 13 : "P10", 
    14 : "C6", 15 : "B3", 16 : "B10", 17 : "A13", 18 : "A7", 19 : "D8", 
    20 : "G1", 21 : "G4", 22 : "P13", 23 : "G7", 24 : "G10", 25 : "C12", 
    26 : "H2", 27 : "T4", 28 : "H7", 29 : "T1", 30 : "H10", 31 : "H13", 
    32 : "T6", 33 : "T9", 34 : "T12", 35 : "S2", 36 : "S5", 37 : "S9", 
    38 : "S13", 39 : "M1", 40 : "L3", 41 : "K6", 42 : "M4", 43 : "M7", 
    44 : "K2", 45 : "L6", 46 : "K9", 47 : "L10", 48 : "M10", 49 : "K12", 
    50 : "M13", 51 : "R2", 52 : "D1", 53 : "M5", 54 : "L1", 55 : "P12", 
    56 : "A1", 57 : "C1", 58 : "P7", 59 : "E9", 60 : "K13", 61 : "K3", 
    62 : "B1", 63 : "D6", 64 : "E4", 65 : "R4", 66 : "G13", 67 : "H5", 
    68 : "B12", 69 : "C8", 70 : "L11", 71 : "M6", 72 : "L13", 101 : "B5", 
    102 : "A5", 103 : "D9", 104 : "G3", 105 : "C4", 106 : "C11", 107 : "P6", 
    108 : "R8", 109 : "H4", 110 : "H9", 111 : "T3", 112 : "T8", 113 : "S7", 
    114 : "T13", 115 : "S11", 116 : "E8", 117 : "L5", 118 : "K4", 119 : "K7", 
    120 : "L8", 121 : "M8", 122 : "L12", 123 : "G8", 124 : "A2", 125 : "B8", 
    126 : "D3", 127 : "D13", 128 : "B13", 129 : "A9", 130 : "A12", 131 : "P11", 
    132 : "P3", 133 : "M12", 134 : "E1", 135 : "G12", 136 : "H1", 137 : "S4", 
    138 : "K1", 139 : "M3", 140 : "E11", 201 : "G5", 202 : "H8", 203 : "D5", 
    204 : "C7", 205 : "E13", 206 : "P9", 207 : "T10", 208 : "S10", 209 : "M2", 
    210 : "L2", 211 : "L4", 212 : "K10", 213 : "M11", 214 : "M9", 215 : "K8", 
    216 : "B4", 217 : "C5", 218 : "D7", 219 : "C13", 220 : "C10", 221 : "B6", 
    222 : "A11", 223 : "E7", 224 : "P8", 225 : "G6", 226 : "T7", 227 : "H12", 
    228 : "S12", 229 : "P5", 230 : "C2", 231 : "D10", 232 : "L7", 233 : "A8", 
    234 : "B11", 235 : "R1", 236 : "K5", 237 : "L9", 238 : "K11", 239 : "R3", 
    240 : "D12", 241 : "B9", 242 : "A6", 243 : 'B2', 244 : "D2", 245 : "A3", 
    246 : "E5", 247 : "P2", 248 : "E10", 249 : "E3", 250 : "G11", 251 : "H3", 
    252 : "H11", 253 : "T11", 254 : "S6", 255 : "S1", 256 : "T5", 257 : "S8", 
    258 : "H6", 259 : "T2", 260 : "S3",
}


units_by_building = {
    1 : [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16],
    2 : [17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32],
    3 : [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48],
    4 : [49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72],
    5 : [101, 102, 103, 104, 105, 106, 107, 108, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212],
    6 : [109, 110, 111, 112, 113, 114, 115, 116, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224],
    7 : [117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242],
    8 : [129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260],
}


def get_unit_numbers(units, buildings):
    unit_numbers = []
    buildings = buildings.split()
    for building in buildings:
        for unit in units_by_building[int(building)]:
            unit_numbers.append(unit)

    if units != "":
        units = units.split(", ")
        units = [int(x) for x in units]
        for unit in units:
            if unit in key_box.keys() and unit not in unit_numbers:
                unit_numbers.append(unit)
    return unit_numbers


def get_keycodes(unit_numbers, sort_to_walk=False):

    keycodes = []
    for unit in unit_numbers:
        keycodes.append(key_box[unit])

    if keycodes == []:
        return ""
    
    keycodestring = ""
    if not sort_to_walk:
        keycodes.sort(key=lambda x: (x[0], int(x[1:])))
        prev_code = keycodes[0]
        for code in keycodes:
            if code[0] != prev_code[0]:
                keycodestring = keycodestring[:-2]
                keycodestring += "\n"
            keycodestring += f"{code}, "
            prev_code = code
    else:
        for i, code in enumerate(keycodes):
            keycodestring += f"{code}, "
            if i and i % 7 == 0:
                keycodestring = keycodestring[:-2]
                keycodestring += "\n"
    keycodestring = keycodestring[:-2]

    return keycodestring